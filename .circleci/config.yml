version: 2.1

executors:
  node_postgres:
    docker:
      - image: circleci/node:10.19.0
        environment: # overrides the .env
          - DB_USERNAME=seed
          - DB_PASSWORD=Ge0rgesMoustaki
          - DB_DATABASE=seed
          - DB_PORT=5434
      - image: circleci/postgres:10.9-alpine-ram
        environment:
          - POSTGRES_DB=seed
          - POSTGRES_USER=seed
          - POSTGRES_PASSWORD=Ge0rgesMoustaki
          - PGPORT=5434
  node_mysql:
    docker:
      - image: circleci/node:10.19.0
      - image: circleci/mysql:8.0.4
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          - MYSQL_DATABASE=seed
          - MYSQL_USER=seed
          - MYSQL_PASSWORD=Ge0rgesMoustaki

commands:
  yarn-install:
    steps:
      - checkout
      - attach_workspace:
          at: ~/nestjs-admin
      - run:
          name: Install lib dependencies
          command: yarn install
      - run:
          name: Build lib
          command: yarn build
      - run:
          name: Install example app dependencies
          command: cd exampleApp && yarn install
      - run:
          name: Check that the exampleApp isn't compiled in the lib
          command: |
            test -z "$(find dist/ -name "exampleApp" -type d)"
            test -n "$(find exampleApp/ -name "user.entity.ts" -type f)"
            test -z "$(find dist/ -name "user.entity.*" -type f)"
      - persist_to_workspace:
          root: ~/nestjs-admin
          paths:
            - node_modules
            - exampleApp/node_modules
            - dist
            - exampleApp/dist
            - .env

  run-tests:
    parameters:
      env:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/nestjs-admin
      - run:
          name: Prepare environment
          command: rm -f .env.test && cp << parameters.env >> .env.test
      - run:
          name: Run migrations
          command: yarn test:schema:sync
      - run:
          name: Run tests
          command: yarn test

jobs:
  yarn-install-back:
    executor: node_postgres
    working_directory: ~/nestjs-admin
    steps:
      - yarn-install

  test-example-app:
    executor: node_postgres
    working_directory: ~/nestjs-admin
    environment:
      NODE_ENV: test
    steps:
      - checkout
      - attach_workspace:
          at: ~/nestjs-admin
      - run:
          name: Compile the exampleApp
          working_directory: ~/nestjs-admin/exampleApp
          command: yarn tsc -p tsconfig.build.json
      - run:
          name: Run the dev server
          working_directory: ~/nestjs-admin/exampleApp
          command: node dist/src/main.js
          background: true
      - run:
          name: Check that the dev server starts correctly
          working_directory: ~/nestjs-admin/exampleApp
          command: |
            sleep 8
            curl -v --fail http://localhost:8000 > home.html
            grep -q "Hello World" home.html
            curl -v --fail http://localhost:8000/admin > redirect.html
            grep -q "Found. Redirecting to /admin/login" redirect.html
            curl -v --fail http://localhost:8000/admin/login > login.html
            grep -q "NestJS Administration" login.html
            grep -q "Please provide admin credentials to access the administration" login.html

  test-unit-postgres:
    executor: node_postgres
    working_directory: ~/nestjs-admin
    environment:
      NODE_ENV: test
    steps:
      - run-tests:
          env: .env.postgres

  test-unit-mysql:
    executor: node_mysql
    working_directory: ~/nestjs-admin
    environment:
      NODE_ENV: test
    steps:
      - run-tests:
          env: .env.mysql

  deploy-docs:
    docker:
      - image: circleci/node:10.16.3

    steps:
      - checkout
      - run:
          name: Deploying docs to GitHub Pages
          command: |
            git config --global user.email "williamdclt@users.noreply.github.com"
            git config --global user.name "William Duclot"
            echo "machine github.com login williamdclt password $GITHUB_TOKEN" > ~/.netrc
            cd website && yarn install && GIT_USER=williamdclt yarn run publish-gh-pages

workflows:
  version: 2
  stack:
    jobs:
      - yarn-install-back
      - test-example-app:
          requires:
            - yarn-install-back
      - test-unit-postgres:
          requires:
            - yarn-install-back
      - test-unit-mysql:
          requires:
            - yarn-install-back
      - deploy-docs:
          requires:
            - test-unit-postgres
            - test-unit-mysql
            - test-example-app
          filters:
            branches:
              only:
                - master
